pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "8.2.2" apply false
    id "org.jetbrains.kotlin.android" version "1.9.22" apply false
}

include ":app"

try {
    def file = new File(project.projectDir.parentFile, "flutter_application_1/.android/include_flutter.groovy")
    if (file.exists()) {
        evaluate(file)
    }
} catch (Exception e) {
    // Ignora o erro se o arquivo não for encontrado, o que é normal em alguns cenários de build
}

// Configuração para forçar um namespace nos pacotes problemáticos
gradle.beforeProject { project ->
    if (project.name.equals("google_api_headers")) {
        project.afterEvaluate {
            android {
                namespace "com.example.flutter_application_1"
            }
        }
    }
}